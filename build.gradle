plugins {
    id "groovy"
    id "java"
    id 'jacoco'
    id "idea"
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'kr.entree.spigradle' version '2.2.4'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

group 'com.sparkedhost'
version '1.2.0-testing'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url = uri('https://oss.sonatype.org/content/repositories/snapshots') }
    maven { url = 'https://jitpack.io' }
    maven {
        url = 'https://maven.pkg.github.com/sparkedhost/pterodactyl4j'
        credentials {
            username = System.getenv("USERNAME") ?: System.getenv("GITHUB_USERNAME")
            password = System.getenv("TOKEN") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    allprojects {
        repositories {
            maven { url 'https://jitpack.io' }
        }
    }
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    compileOnly spigot('1.12.2')
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.sparkedhost:pterodactyl4j:2.0-DEV'
    compileOnly 'me.clip:placeholderapi:2.11.1'
}

spigot {
    authors = ['BetTD']
    load = POST_WORLD
    description = 'Your go-to solution for keeping track of server resource utilization!'
    softDepends = ['PlaceholderAPI']
    commands {
        perf {
            aliases = ['performance', 'lag']
            description = 'Displays the server resource usage'
            permission = 'readings.perf'
        }
        arc {
            aliases = ['accuratereadings', 'arcontrol']
            description = 'Controls AccurateReadings functionality'
            permission = 'readings.control'
        }
    }
    permissions {
        'readings.*' {
            description = 'God mode - Grants access to everything in this plugin'
            defaults = 'op'
            children = [
                    'readings.perf': true,
                    'readings.restart': true,
                    'readings.control': true
            ]
        }
        'readings.perf' {
            description = 'Gives access to resource usage commands'
            defaults = 'op'
        }
        'readings.restart' {
            description = 'Restarts the server using the Pterodactyl API'
            defaults = 'op'
        }
        'readings.control' {
            description = 'Grants access to /arc command'
            defaults = 'op'
        }
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
    dependencies {
        exclude dependency('org.jetbrains:annotations:23.0.0')
    }
    configure {
        classifier = null
    }
}
tasks.jar.configure {
    classifier = 'noshadow'
}

tasks.build.dependsOn(shadowJar)

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    ignoreFailures = false
}

defaultTasks 'build'
